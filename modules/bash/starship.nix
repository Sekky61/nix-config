{
  lib,
  hostname,
  config,
  ...
}:
let
  lang = icon: color: {
    symbol = icon;
    format = "[$symbol ](${color})";
  };
  os = icon: fg: "[${icon} ](fg:${osColor fg})";
  pad = {
    left = "ÓÇ∂";
    right = "ÓÇ¥";
  };

  # username and hostname based color
  host_colors = {
    nix-yoga = "green";
    nixpi = "red";
  };

  theme = config.michal.theme;

  osColor =
    fallback: if builtins.hasAttr hostname host_colors then host_colors.${hostname} else fallback;
in
{
  programs.starship = {
    enable = true;
    settings = {
      add_newline = true;
      format = lib.strings.concatStrings [
        "$nix_shell"
        "$os"
        "$directory"
        "$container"
        "$git_branch $git_status"
        "$python"
        "$nodejs"
        "$lua"
        "$rust"
        "$java"
        "$c"
        "$golang"
        "$cmd_duration"
        "$status"
        "$line_break"
        "[‚ùØ](bold purple)"
        ''''${custom.space}''
      ];
      custom.space = {
        when = ''! test $env'';
        format = "  ";
      };
      continuation_prompt = "‚àô  ‚îÜ ";
      line_break = {
        disabled = false;
      };
      status = {
        symbol = "‚úó";
        not_found_symbol = "Û∞çâ Not Found";
        not_executable_symbol = "ÔÅó Can't Execute E";
        sigint_symbol = "Û∞Ç≠ ";
        signal_symbol = "Û±ëΩ ";
        success_symbol = "";
        format = "[$symbol](fg:${theme.error})";
        map_symbol = true;
        disabled = false;
      };
      git_state = {
        format = "[\($state( $progress_current of $progress_total)\)]($style) ";
        cherry_pick = "[üçí PICKING](bold red)";
      };
      cmd_duration = {
        min_time = 300;
        format = "[$duration ](fg:yellow)";
      };
      nix_shell = {
        disabled = false;
        format = "[${pad.left}](fg:white)[Ôåì ](bg:white fg:black)[${pad.right}](fg:white) ";
      };
      container = {
        symbol = " Û∞èñ";
        format = "[$symbol ](yellow dimmed)";
      };
      directory = {
        format = " [${pad.left}](fg:${theme.primary})[$path](bg:${theme.primary} bold fg:${theme.onPrimary})[${pad.right}](fg:${theme.primary})";
        truncation_length = 6;
        truncation_symbol = "~/Û∞áò/";
      };
      directory.substitutions = {
        "Documents" = "Û∞àô ";
        "Downloads" = "ÔÄô ";
        "Music" = "ÔÄÅ ";
        "Pictures" = "ÔÄæ ";
        "Videos" = "ÔÄΩ ";
        "Projects" = "Û±å¢ ";
        "School" = "Û∞ë¥ ";
        ".config" = "Ôê£ ";
        "Vault" = "Û±âΩ ";
        "hyprland" = " Ôçô ";
        "GitHub" = " Ôêà ";
      };
      git_branch = {
        symbol = "ÓÇ†";
        style = "";
        format = "[ $symbol $branch](fg:purple)(:$remote_branch)";
      };
      os = {
        disabled = false;
        format = "$symbol";
      };
      os.symbols = {
        Arch = os "ÔåÉ" "bright-blue";
        Debian = os "ÔåÜ" "red)";
        EndeavourOS = os "Ôå¢" "purple";
        Fedora = os "Ôåä" "blue";
        NixOS = os "Ôåì" hostname;
        openSUSE = os "Ôåî" "green";
        SUSE = os "Ôåî" "green";
        Ubuntu = os "Ôåú" "bright-purple";
      };
      python = lang "Óúº" "yellow";
      nodejs = lang "ÓûÅ " "yellow";
      lua = lang "Û∞¢±" "blue";
      rust = lang "Óû®" "red";
      java = lang "Óú∏" "red";
      c = lang "Óòû" "blue";
      golang = lang "Óòß" "blue";
      zig = lang "Óö©" "yellow";
      nix = lang "Û±ÑÖ" "blue";
    };
  };
}
