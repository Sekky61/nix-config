@use 'sass:color';
@use './material';
@use './lib_mixins';

// Made to be pixel-perfect with 11pt font size
// 1rem = 11pt = 14.6666666667px

$black: black;
$white: white;
$bar_ws_width: 1.774rem;
$bar_subgroup_bg: material.$surfaceVariant;

@mixin bar-group-rounding {
    @include lib_mixins.small-rounding;
}

.bar-height {
    min-height: 2.727rem;
}

.bar-bg {
    background-color: black; // for that OLED black. used to be $t_background;
    min-height: 1.727rem;
}

.bar-sidespace {
    min-width: 1rem;
    min-height: 1rem;
}

.bar-group-margin {
    padding: 0.273rem 0rem;
}

.bar-group {
    background-color: material.$l_l_t_surfaceVariant;
}

.bar-group-pad {
    padding: 0.205rem;
}

.bar-group-pad-less {
    padding: 0rem 0.681rem;
}

.bar-group-pad-system {
    padding: 0rem 0.341rem;
}

.bar-group-pad-music {
    padding-right: 1.023rem;
    padding-left: 0.341rem;
}

.bar-group-standalone {
    @include bar-group-rounding;
    -gtk-outline-radius: 1.364rem;
}

.bar-group-round {
    border-radius: 10rem;
    -gtk-outline-radius: 10rem;
}

.bar-group-middle {
    border-radius: 0.477rem;
    -gtk-outline-radius: 0.477rem;
}

.bar-group-left {
    border-radius: 0.477rem;
    -gtk-outline-radius: 0.477rem;
    border-top-left-radius: 1.364rem;
    border-bottom-left-radius: 1.364rem;
}

.bar-group-right {
    border-radius: 0.477rem;
    -gtk-outline-radius: 0.477rem;
    border-top-right-radius: 1.364rem;
    border-bottom-right-radius: 1.364rem;
}

.bar-ws-width {
    min-width: 18.341rem;
}

.bar-ws {
    @include lib_mixins.full-rounding;
    min-width: $bar_ws_width;
    min-height: $bar_ws_width;
    color: color.mix(material.$onBackground, material.$background, 40%);

    @if material.$darkmode ==true {
        color: color.mix(material.$onBackground, material.$background, 45%);
    }
}

.bar-ws-monitor-indicator {
    @include lib_mixins.icon-material;
}

.bar-ws-occupied {
    background-color: $bar_subgroup_bg;
    color: material.$onSurfaceVariant;
}

/* Apply active above occupied (css rule order) */
.bar-ws-active {
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-separator {
    @include lib_mixins.full-rounding;
    min-width: 0.341rem;
    min-height: 0.341rem;
    background-color: color.mix(material.$t_surface, material.$t_onSurface, 90%);
    margin: 0rem 0.341rem;
}

.bar-clock-box {
    margin: 0rem 0.682rem;
}

.bar-clock {
    @include lib_mixins.titlefont;
    font-size: 1.2727rem;
}

.bar-date {
    @include lib_mixins.titlefont;
    font-size: 1rem;
    color: material.$onBackground;
}

.bar-batt {
    @include lib_mixins.full-rounding;
    @include lib_mixins.element_decel;
    min-height: 1.77rem;
    min-width: 1.77rem;
    border-radius: 10rem;
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-sidemodule {
    min-width: 26rem;
}

.bar-batt-low {
    background-color: material.$error;
    color: material.$errorContainer;
}

.bar-batt-full {
    background-color: material.$successContainer;
    color: material.$onSuccessContainer;
}

.bar-batt-circprog {
    @include lib_mixins.fluent_decel_long;
    min-width: 0.068rem; // line width
    min-height: 1.636rem;
    padding: 0rem;
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-batt-circprog-low {
    background-color: material.$error;
    color: material.$errorContainer;
}

.bar-batt-circprog-full {
    background-color: material.$successContainer;
    color: material.$onSuccessContainer;
}

.bar-music-playstate {
    @include lib_mixins.element_decel;
    min-height: 1.77rem;
    min-width: 1.77rem;
    border-radius: 10rem;
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-music-circprog {
    @include lib_mixins.fluent_decel_long;
    min-width: 0.068rem; // line width
    min-height: 1.636rem;
    padding: 0rem;
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-music-playstate-playing {
    min-height: 1.77rem;
    min-width: 1.77rem;
    border-radius: 10rem;
    background-color: material.$secondaryContainer;
    color: material.$onSecondaryContainer;
}

.bar-music-playstate-txt {
    transition: 100ms cubic-bezier(0.05, 0.7, 0.1, 1);
    @include lib_mixins.icon-material;
}

.bar-music-cover {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100% auto;
    min-width: 11.932rem;
}

.bar-music-extended-bg {
    border-radius: 1.364rem;
    min-width: 34.091rem;
}

.bar-music-extended-ctl-bg {
    border-radius: 1.364rem;
    background-color: rgba(30, 30, 30, 0.6);
}

.bar-music-hide-false {
    @include lib_mixins.menu_decel;
    transition-duration: 100ms;
    opacity: 1;
}

.bar-music-hide-true {
    @include lib_mixins.menu_accel;
    transition-duration: 100ms;
    opacity: 0;
}

.bar-corner-spacing {
    min-width: lib_mixins.$rounding_large;
    min-height: lib_mixins.$rounding_large;
}

.corner {
    background-color: $black; // Used to be: $t_background;
    @include lib_mixins.small-rounding; // used for corners in top bar
}

.corner-black {
    background-color: $black; // Hard code: fake screen corner
    @include lib_mixins.small-rounding;
}

.bar-topdesc {
    margin-top: -0.136rem;
    margin-bottom: -0.341rem;
    color: material.$subtext;
}

.bar-space-button {
    padding: 0.341rem;
}

.bar-space-button>box:first-child {
    @include lib_mixins.full-rounding;
    padding: 0rem 0.682rem;
}

.bar-space-button:hover>box:first-child,
.bar-space-button:focus>box:first-child {
    background-color: material.$hovercolor;
}

.bar-space-button:active>box:first-child {
    background-color: material.$activecolor;
}

.bar-space-button-leftmost {
    box {
        margin: 0rem 0.682rem;
    }
}

.bar-space-area-rightmost>box {
    padding-right: 2.386rem;
}

.bar-systray {
    @include lib_mixins.full-rounding;
    margin: 0.137rem 0rem;
    padding: 0rem 0.682rem;
}

.bar-systray-item {
    @include lib_mixins.full-rounding;
    @include lib_mixins.element_decel;
    min-height: 1.032rem;
    min-width: 1.032rem;
    font-size: 1.032rem;
    padding: 0 0.3rem;
}

.bar-statusicons {
    @include lib_mixins.full-rounding;
    @include lib_mixins.element_decel;
    margin: 0.273rem;
    padding: 0rem 0.614rem;
}

.bar-statusicons-hover {
    background-color: color.mix(material.$t_background, material.$t_onBackground, 90%);
}

.bar-statusicons-active {
    background-color: color.mix(material.$t_background, material.$t_onBackground, 80%);
}

.bar-util-btn {
    @include lib_mixins.full-rounding;
    @include lib_mixins.element_decel;
    min-height: 1.77rem;
    min-width: 1.77rem;
    background-color: $bar_subgroup_bg;
}

.bar-util-btn:hover,
.bar-util-btn:focus {
    background-color: color.mix($bar_subgroup_bg, material.$onSurfaceVariant, 90%);
}

.bar-util-btn:active {
    background-color: color.mix($bar_subgroup_bg, material.$onSurfaceVariant, 80%);
}

/* parking lot, todo move */

.mouse-parking {
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 8px;
    padding: 8px 12px;
    background: rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease-in-out;
    min-width: 40px;
    min-height: 40px;
}

.mouse-parking:hover {
    border-color: rgba(255, 255, 255, 0.6);
    background: rgba(0, 0, 0, 0.2);
    box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.1);
}

.mouse-parking.occupied {
    border-color: #4CAF50;
    background: rgba(76, 175, 80, 0.1);
    box-shadow: inset 0 0 10px rgba(76, 175, 80, 0.2);
}

.parking-icon {
    opacity: 0.7;
    transition: opacity 0.2s ease-in-out;
}

.parking-height {
    min-height: 2rem;
}

.parking-width {
    min-width: 4rem;
}

.mouse-parking:hover .parking-icon {
    opacity: 1;
}
